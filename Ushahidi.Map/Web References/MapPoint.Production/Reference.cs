//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.3082.
// 
namespace Ushahidi.Map.MapPoint.Production {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommonServiceSoap", Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapPointConstants))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindResult[]))]
    public partial class CommonServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CustomerInfoHeader customerInfoHeaderValueField;
        
        private UserInfoHeader userInfoHeaderValueField;
        
        /// <remarks/>
        public CommonServiceSoap() {
            this.Url = "http://findv3.mappoint.net/Find-30/Common.asmx";
        }
        
        public CustomerInfoHeader CustomerInfoHeaderValue {
            get {
                return this.customerInfoHeaderValueField;
            }
            set {
                this.customerInfoHeaderValueField = value;
            }
        }
        
        public UserInfoHeader UserInfoHeaderValue {
            get {
                return this.userInfoHeaderValueField;
            }
            set {
                this.userInfoHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetVersionInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionInfo[] GetVersionInfo() {
            object[] results = this.Invoke("GetVersionInfo", new object[0]);
            return ((VersionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersionInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersionInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public VersionInfo[] EndGetVersionInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VersionInfo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetCountryRegionInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionInfo[] GetCountryRegionInfo(int[] entityIDs) {
            object[] results = this.Invoke("GetCountryRegionInfo", new object[] {
                        entityIDs});
            return ((CountryRegionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCountryRegionInfo(int[] entityIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCountryRegionInfo", new object[] {
                        entityIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public CountryRegionInfo[] EndGetCountryRegionInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CountryRegionInfo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetEntityTypes", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityType[] GetEntityTypes(string dataSourceName) {
            object[] results = this.Invoke("GetEntityTypes", new object[] {
                        dataSourceName});
            return ((EntityType[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEntityTypes(string dataSourceName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEntityTypes", new object[] {
                        dataSourceName}, callback, asyncState);
        }
        
        /// <remarks/>
        public EntityType[] EndGetEntityTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((EntityType[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetDataSourceInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSource[] GetDataSourceInfo(string[] dataSourceNames) {
            object[] results = this.Invoke("GetDataSourceInfo", new object[] {
                        dataSourceNames});
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataSourceInfo(string[] dataSourceNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataSourceInfo", new object[] {
                        dataSourceNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSource[] EndGetDataSourceInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetGreatCircleDistances", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double[] GetGreatCircleDistances(LatLong[] latLongs) {
            object[] results = this.Invoke("GetGreatCircleDistances", new object[] {
                        latLongs});
            return ((double[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGreatCircleDistances(LatLong[] latLongs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGreatCircleDistances", new object[] {
                        latLongs}, callback, asyncState);
        }
        
        /// <remarks/>
        public double[] EndGetGreatCircleDistances(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((double[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetClientToken", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClientToken(TokenSpecification specification) {
            object[] results = this.Invoke("GetClientToken", new object[] {
                        specification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClientToken(TokenSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClientToken", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetClientToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FindServiceSoap", Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapPointConstants))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindResult[]))]
    public partial class FindServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CustomerInfoFindHeader customerInfoFindHeaderValueField;
        
        private UserInfoFindHeader userInfoFindHeaderValueField;
        
        /// <remarks/>
        public FindServiceSoap() {
            this.Url = "http://findv3.mappoint.net/Find-30/FindService.asmx";
        }
        
        public CustomerInfoFindHeader CustomerInfoFindHeaderValue {
            get {
                return this.customerInfoFindHeaderValueField;
            }
            set {
                this.customerInfoFindHeaderValueField = value;
            }
        }
        
        public UserInfoFindHeader UserInfoFindHeaderValue {
            get {
                return this.userInfoFindHeaderValueField;
            }
            set {
                this.userInfoFindHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/Find", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults Find(FindSpecification specification) {
            object[] results = this.Invoke("Find", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFind(FindSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Find", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/FindAddress", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults FindAddress(FindAddressSpecification specification) {
            object[] results = this.Invoke("FindAddress", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindAddress(FindAddressSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindAddress", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFindAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/ParseAddress", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address ParseAddress(string inputAddress, string countryRegion) {
            object[] results = this.Invoke("ParseAddress", new object[] {
                        inputAddress,
                        countryRegion});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginParseAddress(string inputAddress, string countryRegion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ParseAddress", new object[] {
                        inputAddress,
                        countryRegion}, callback, asyncState);
        }
        
        /// <remarks/>
        public Address EndParseAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetLocationInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] GetLocationInfo(LatLong location, string dataSourceName, GetInfoOptions options) {
            object[] results = this.Invoke("GetLocationInfo", new object[] {
                        location,
                        dataSourceName,
                        options});
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocationInfo(LatLong location, string dataSourceName, GetInfoOptions options, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocationInfo", new object[] {
                        location,
                        dataSourceName,
                        options}, callback, asyncState);
        }
        
        /// <remarks/>
        public Location[] EndGetLocationInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/FindNearby", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults FindNearby(FindNearbySpecification specification) {
            object[] results = this.Invoke("FindNearby", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindNearby(FindNearbySpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindNearby", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFindNearby(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/FindByProperty", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults FindByProperty(FindByPropertySpecification specification) {
            object[] results = this.Invoke("FindByProperty", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindByProperty(FindByPropertySpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindByProperty", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFindByProperty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/FindByID", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults FindByID(FindByIDSpecification specification) {
            object[] results = this.Invoke("FindByID", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindByID(FindByIDSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindByID", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFindByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/FindNearRoute", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults FindNearRoute(FindNearRouteSpecification specification) {
            object[] results = this.Invoke("FindNearRoute", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindNearRoute(FindNearRouteSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindNearRoute", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFindNearRoute(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoFindHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/FindPolygon", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindResults FindPolygon(FindPolygonSpecification specification) {
            object[] results = this.Invoke("FindPolygon", new object[] {
                        specification});
            return ((FindResults)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindPolygon(FindPolygonSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindPolygon", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindResults EndFindPolygon(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindResults)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RouteServiceSoap", Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapPointConstants))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindResult[]))]
    public partial class RouteServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CustomerInfoRouteHeader customerInfoRouteHeaderValueField;
        
        private UserInfoRouteHeader userInfoRouteHeaderValueField;
        
        /// <remarks/>
        public RouteServiceSoap() {
            this.Url = "http://routev3.mappoint.net/Route-30/RouteService.asmx";
        }
        
        public CustomerInfoRouteHeader CustomerInfoRouteHeaderValue {
            get {
                return this.customerInfoRouteHeaderValueField;
            }
            set {
                this.customerInfoRouteHeaderValueField = value;
            }
        }
        
        public UserInfoRouteHeader UserInfoRouteHeaderValue {
            get {
                return this.userInfoRouteHeaderValueField;
            }
            set {
                this.userInfoRouteHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRouteHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRouteHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/CalculateSimpleRoute", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Route CalculateSimpleRoute(LatLong[] latLongs, string dataSourceName, SegmentPreference preference) {
            object[] results = this.Invoke("CalculateSimpleRoute", new object[] {
                        latLongs,
                        dataSourceName,
                        preference});
            return ((Route)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateSimpleRoute(LatLong[] latLongs, string dataSourceName, SegmentPreference preference, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateSimpleRoute", new object[] {
                        latLongs,
                        dataSourceName,
                        preference}, callback, asyncState);
        }
        
        /// <remarks/>
        public Route EndCalculateSimpleRoute(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Route)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRouteHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRouteHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/CalculateRoute", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Route CalculateRoute(RouteSpecification specification) {
            object[] results = this.Invoke("CalculateRoute", new object[] {
                        specification});
            return ((Route)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalculateRoute(RouteSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalculateRoute", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public Route EndCalculateRoute(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Route)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RenderServiceSoap", Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapPointConstants))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FindResult[]))]
    public partial class RenderServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CustomerInfoRenderHeader customerInfoRenderHeaderValueField;
        
        private UserInfoRenderHeader userInfoRenderHeaderValueField;
        
        /// <remarks/>
        public RenderServiceSoap() {
            this.Url = "http://renderv3.mappoint.net/Render-30/RenderService.asmx";
        }
        
        public CustomerInfoRenderHeader CustomerInfoRenderHeaderValue {
            get {
                return this.customerInfoRenderHeaderValueField;
            }
            set {
                this.customerInfoRenderHeaderValueField = value;
            }
        }
        
        public UserInfoRenderHeader UserInfoRenderHeaderValue {
            get {
                return this.userInfoRenderHeaderValueField;
            }
            set {
                this.userInfoRenderHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetMap", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MapImage[] GetMap(MapSpecification specification) {
            object[] results = this.Invoke("GetMap", new object[] {
                        specification});
            return ((MapImage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMap(MapSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMap", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public MapImage[] EndGetMap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MapImage[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/ConvertToPoint", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PixelCoord[] ConvertToPoint(LatLong[] latLong, MapView view, int width, int height) {
            object[] results = this.Invoke("ConvertToPoint", new object[] {
                        latLong,
                        view,
                        width,
                        height});
            return ((PixelCoord[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConvertToPoint(LatLong[] latLong, MapView view, int width, int height, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertToPoint", new object[] {
                        latLong,
                        view,
                        width,
                        height}, callback, asyncState);
        }
        
        /// <remarks/>
        public PixelCoord[] EndConvertToPoint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PixelCoord[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/ConvertToLatLong", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LatLong[] ConvertToLatLong(PixelCoord[] pixels, MapView view, int width, int height) {
            object[] results = this.Invoke("ConvertToLatLong", new object[] {
                        pixels,
                        view,
                        width,
                        height});
            return ((LatLong[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConvertToLatLong(PixelCoord[] pixels, MapView view, int width, int height, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConvertToLatLong", new object[] {
                        pixels,
                        view,
                        width,
                        height}, callback, asyncState);
        }
        
        /// <remarks/>
        public LatLong[] EndConvertToLatLong(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LatLong[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetBestMapView", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MapViewRepresentations GetBestMapView(Location[] locations, string dataSourceName) {
            object[] results = this.Invoke("GetBestMapView", new object[] {
                        locations,
                        dataSourceName});
            return ((MapViewRepresentations)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBestMapView(Location[] locations, string dataSourceName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBestMapView", new object[] {
                        locations,
                        dataSourceName}, callback, asyncState);
        }
        
        /// <remarks/>
        public MapViewRepresentations EndGetBestMapView(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MapViewRepresentations)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoRenderHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetLineDriveMap", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LineDriveMapImage[] GetLineDriveMap(LineDriveMapSpecification specification) {
            object[] results = this.Invoke("GetLineDriveMap", new object[] {
                        specification});
            return ((LineDriveMapImage[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLineDriveMap(LineDriveMapSpecification specification, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLineDriveMap", new object[] {
                        specification}, callback, asyncState);
        }
        
        /// <remarks/>
        public LineDriveMapImage[] EndGetLineDriveMap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LineDriveMapImage[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class UserInfoRouteHeader : UserInfoHeader {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoRenderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoRouteHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoFindHeader))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class UserInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        private CultureInfo cultureField;
        
        private DistanceUnit defaultDistanceUnitField;
        
        private CountryRegionContext contextField;
        
        /// <remarks/>
        public CultureInfo Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public DistanceUnit DefaultDistanceUnit {
            get {
                return this.defaultDistanceUnitField;
            }
            set {
                this.defaultDistanceUnitField = value;
            }
        }
        
        /// <remarks/>
        public CountryRegionContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CultureInfo {
        
        private string nameField;
        
        private int lcidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Lcid {
            get {
                return this.lcidField;
            }
            set {
                this.lcidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LineDriveMapImage {
        
        private MimeData mimeDataField;
        
        private string urlField;
        
        private MapViewRepresentations viewField;
        
        private int firstDirectionIDField;
        
        private int lastDirectionIDField;
        
        /// <remarks/>
        public MimeData MimeData {
            get {
                return this.mimeDataField;
            }
            set {
                this.mimeDataField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
            }
        }
        
        /// <remarks/>
        public int FirstDirectionID {
            get {
                return this.firstDirectionIDField;
            }
            set {
                this.firstDirectionIDField = value;
            }
        }
        
        /// <remarks/>
        public int LastDirectionID {
            get {
                return this.lastDirectionIDField;
            }
            set {
                this.lastDirectionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MimeData {
        
        private byte[] bitsField;
        
        private string contentIDField;
        
        private string mimeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Bits {
            get {
                return this.bitsField;
            }
            set {
                this.bitsField = value;
            }
        }
        
        /// <remarks/>
        public string ContentID {
            get {
                return this.contentIDField;
            }
            set {
                this.contentIDField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapViewRepresentations {
        
        private ViewByScale byScaleField;
        
        private ViewByHeightWidth byHeightWidthField;
        
        private ViewByBoundingRectangle byBoundingRectangleField;
        
        /// <remarks/>
        public ViewByScale ByScale {
            get {
                return this.byScaleField;
            }
            set {
                this.byScaleField = value;
            }
        }
        
        /// <remarks/>
        public ViewByHeightWidth ByHeightWidth {
            get {
                return this.byHeightWidthField;
            }
            set {
                this.byHeightWidthField = value;
            }
        }
        
        /// <remarks/>
        public ViewByBoundingRectangle ByBoundingRectangle {
            get {
                return this.byBoundingRectangleField;
            }
            set {
                this.byBoundingRectangleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByScale : MapView {
        
        private double mapScaleField;
        
        private LatLong centerPointField;
        
        public ViewByScale() {
            this.mapScaleField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double MapScale {
            get {
                return this.mapScaleField;
            }
            set {
                this.mapScaleField = value;
            }
        }
        
        /// <remarks/>
        public LatLong CenterPoint {
            get {
                return this.centerPointField;
            }
            set {
                this.centerPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLong {
        
        private double latitudeField;
        
        private double longitudeField;
        
        public LatLong() {
            this.latitudeField = 0;
            this.longitudeField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByBoundingRectangle))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByBoundingLocations))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByHeightWidth))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByScale))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public abstract partial class MapView {
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByBoundingRectangle : MapView {
        
        private LatLongRectangle boundingRectangleField;
        
        /// <remarks/>
        public LatLongRectangle BoundingRectangle {
            get {
                return this.boundingRectangleField;
            }
            set {
                this.boundingRectangleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLongRectangle {
        
        private LatLong southwestField;
        
        private LatLong northeastField;
        
        /// <remarks/>
        public LatLong Southwest {
            get {
                return this.southwestField;
            }
            set {
                this.southwestField = value;
            }
        }
        
        /// <remarks/>
        public LatLong Northeast {
            get {
                return this.northeastField;
            }
            set {
                this.northeastField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByBoundingLocations : MapView {
        
        private Location[] locationsField;
        
        /// <remarks/>
        public Location[] Locations {
            get {
                return this.locationsField;
            }
            set {
                this.locationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Location {
        
        private LatLong latLongField;
        
        private Entity entityField;
        
        private Address addressField;
        
        private MapViewRepresentations bestMapViewField;
        
        private string dataSourceNameField;
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
        
        /// <remarks/>
        public Entity Entity {
            get {
                return this.entityField;
            }
            set {
                this.entityField = value;
            }
        }
        
        /// <remarks/>
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public MapViewRepresentations BestMapView {
            get {
                return this.bestMapViewField;
            }
            set {
                this.bestMapViewField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Entity {
        
        private int idField;
        
        private string nameField;
        
        private string displayNameField;
        
        private string typeNameField;
        
        private EntityPropertyValue[] propertiesField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityPropertyValue[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityPropertyValue {
        
        private string nameField;
        
        private object valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Address {
        
        private string addressLineField;
        
        private string primaryCityField;
        
        private string secondaryCityField;
        
        private string subdivisionField;
        
        private string postalCodeField;
        
        private string countryRegionField;
        
        private string formattedAddressField;
        
        /// <remarks/>
        public string AddressLine {
            get {
                return this.addressLineField;
            }
            set {
                this.addressLineField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryCity {
            get {
                return this.primaryCityField;
            }
            set {
                this.primaryCityField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryCity {
            get {
                return this.secondaryCityField;
            }
            set {
                this.secondaryCityField = value;
            }
        }
        
        /// <remarks/>
        public string Subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegion {
            get {
                return this.countryRegionField;
            }
            set {
                this.countryRegionField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedAddress {
            get {
                return this.formattedAddressField;
            }
            set {
                this.formattedAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByHeightWidth : MapView {
        
        private double heightField;
        
        private double widthField;
        
        private LatLong centerPointField;
        
        public ViewByHeightWidth() {
            this.heightField = 0;
            this.widthField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public LatLong CenterPoint {
            get {
                return this.centerPointField;
            }
            set {
                this.centerPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LineDriveMapOptions {
        
        private ImageFormat formatField;
        
        private MapReturnType returnTypeField;
        
        private MapFontSize fontSizeField;
        
        private PaletteType paletteTypeField;
        
        private string destinationIconDataSourceField;
        
        private string destinationIconNameField;
        
        public LineDriveMapOptions() {
            this.returnTypeField = MapReturnType.ReturnImage;
            this.fontSizeField = MapFontSize.Smaller;
        }
        
        /// <remarks/>
        public ImageFormat Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(MapReturnType.ReturnImage)]
        public MapReturnType ReturnType {
            get {
                return this.returnTypeField;
            }
            set {
                this.returnTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(MapFontSize.Smaller)]
        public MapFontSize FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        public PaletteType PaletteType {
            get {
                return this.paletteTypeField;
            }
            set {
                this.paletteTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationIconDataSource {
            get {
                return this.destinationIconDataSourceField;
            }
            set {
                this.destinationIconDataSourceField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationIconName {
            get {
                return this.destinationIconNameField;
            }
            set {
                this.destinationIconNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ImageFormat {
        
        private string mimeTypeField;
        
        private int heightField;
        
        private int widthField;
        
        public ImageFormat() {
            this.mimeTypeField = "image/gif";
            this.heightField = 240;
            this.widthField = 296;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("image/gif")]
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(240)]
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(296)]
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum MapReturnType {
        
        /// <remarks/>
        ReturnImage,
        
        /// <remarks/>
        ReturnUrl,
        
        /// <remarks/>
        ReturnSecureUrl,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum MapFontSize {
        
        /// <remarks/>
        Smallest,
        
        /// <remarks/>
        Smaller,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Larger,
        
        /// <remarks/>
        Largest,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum PaletteType {
        
        /// <remarks/>
        Color,
        
        /// <remarks/>
        GrayScale,
        
        /// <remarks/>
        Monochrome,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LineDriveMapSpecification {
        
        private Route routeField;
        
        private LineDriveMapOptions optionsField;
        
        /// <remarks/>
        public Route Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public LineDriveMapOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Route {
        
        private RouteSpecification specificationField;
        
        private RouteItinerary itineraryField;
        
        private CalculatedRouteRepresentation calculatedRepresentationField;
        
        /// <remarks/>
        public RouteSpecification Specification {
            get {
                return this.specificationField;
            }
            set {
                this.specificationField = value;
            }
        }
        
        /// <remarks/>
        public RouteItinerary Itinerary {
            get {
                return this.itineraryField;
            }
            set {
                this.itineraryField = value;
            }
        }
        
        /// <remarks/>
        public CalculatedRouteRepresentation CalculatedRepresentation {
            get {
                return this.calculatedRepresentationField;
            }
            set {
                this.calculatedRepresentationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class RouteSpecification {
        
        private SegmentSpecification[] segmentsField;
        
        private RouteResultMask resultMaskField;
        
        private string dataSourceNameField;
        
        private DriverProfile driverProfileField;
        
        /// <remarks/>
        public SegmentSpecification[] Segments {
            get {
                return this.segmentsField;
            }
            set {
                this.segmentsField = value;
            }
        }
        
        /// <remarks/>
        public RouteResultMask ResultMask {
            get {
                return this.resultMaskField;
            }
            set {
                this.resultMaskField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public DriverProfile DriverProfile {
            get {
                return this.driverProfileField;
            }
            set {
                this.driverProfileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class SegmentSpecification {
        
        private Waypoint waypointField;
        
        private SegmentOptions optionsField;
        
        /// <remarks/>
        public Waypoint Waypoint {
            get {
                return this.waypointField;
            }
            set {
                this.waypointField = value;
            }
        }
        
        /// <remarks/>
        public SegmentOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Waypoint {
        
        private Location locationField;
        
        private SnapType snapField;
        
        private string nameField;
        
        private Location calculatedLocationField;
        
        /// <remarks/>
        public Location Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public SnapType Snap {
            get {
                return this.snapField;
            }
            set {
                this.snapField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Location CalculatedLocation {
            get {
                return this.calculatedLocationField;
            }
            set {
                this.calculatedLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SnapType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        City,
        
        /// <remarks/>
        NearestRoad,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class SegmentOptions {
        
        private SegmentPreference preferenceField;
        
        private bool calculateSegmentMapViewField;
        
        private bool calculateDirectionMapViewField;
        
        public SegmentOptions() {
            this.calculateSegmentMapViewField = true;
            this.calculateDirectionMapViewField = true;
        }
        
        /// <remarks/>
        public SegmentPreference Preference {
            get {
                return this.preferenceField;
            }
            set {
                this.preferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CalculateSegmentMapView {
            get {
                return this.calculateSegmentMapViewField;
            }
            set {
                this.calculateSegmentMapViewField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CalculateDirectionMapView {
            get {
                return this.calculateDirectionMapViewField;
            }
            set {
                this.calculateDirectionMapViewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SegmentPreference {
        
        /// <remarks/>
        Quickest,
        
        /// <remarks/>
        Shortest,
        
        /// <remarks/>
        PreferredRoads,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum RouteResultMask {
        
        /// <remarks/>
        Itinerary = 1,
        
        /// <remarks/>
        CalculatedRouteRepresentation = 2,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class DriverProfile {
        
        private int dayStartTimeField;
        
        private int dayEndTimeField;
        
        private PreferredRoadTypes preferredRoadTypesField;
        
        public DriverProfile() {
            this.dayStartTimeField = -1;
            this.dayEndTimeField = -1;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int DayStartTime {
            get {
                return this.dayStartTimeField;
            }
            set {
                this.dayStartTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int DayEndTime {
            get {
                return this.dayEndTimeField;
            }
            set {
                this.dayEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public PreferredRoadTypes PreferredRoadTypes {
            get {
                return this.preferredRoadTypesField;
            }
            set {
                this.preferredRoadTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class PreferredRoadTypes {
        
        private double highwaysField;
        
        private double majorRoadsField;
        
        private double minorRoadsField;
        
        private double tollRoadsField;
        
        private double ferriesField;
        
        public PreferredRoadTypes() {
            this.highwaysField = 0.5;
            this.majorRoadsField = 0.5;
            this.minorRoadsField = 0.5;
            this.tollRoadsField = 0.5;
            this.ferriesField = 0.5;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double Highways {
            get {
                return this.highwaysField;
            }
            set {
                this.highwaysField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double MajorRoads {
            get {
                return this.majorRoadsField;
            }
            set {
                this.majorRoadsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double MinorRoads {
            get {
                return this.minorRoadsField;
            }
            set {
                this.minorRoadsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double TollRoads {
            get {
                return this.tollRoadsField;
            }
            set {
                this.tollRoadsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double Ferries {
            get {
                return this.ferriesField;
            }
            set {
                this.ferriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class RouteItinerary {
        
        private Segment[] segmentsField;
        
        private long tripTimeField;
        
        private long drivingTimeField;
        
        private double distanceField;
        
        private MapViewRepresentations viewField;
        
        /// <remarks/>
        public Segment[] Segments {
            get {
                return this.segmentsField;
            }
            set {
                this.segmentsField = value;
            }
        }
        
        /// <remarks/>
        public long TripTime {
            get {
                return this.tripTimeField;
            }
            set {
                this.tripTimeField = value;
            }
        }
        
        /// <remarks/>
        public long DrivingTime {
            get {
                return this.drivingTimeField;
            }
            set {
                this.drivingTimeField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Segment {
        
        private Waypoint waypointField;
        
        private Direction[] directionsField;
        
        private long tripTimeField;
        
        private long drivingTimeField;
        
        private double distanceField;
        
        private MapViewRepresentations viewField;
        
        /// <remarks/>
        public Waypoint Waypoint {
            get {
                return this.waypointField;
            }
            set {
                this.waypointField = value;
            }
        }
        
        /// <remarks/>
        public Direction[] Directions {
            get {
                return this.directionsField;
            }
            set {
                this.directionsField = value;
            }
        }
        
        /// <remarks/>
        public long TripTime {
            get {
                return this.tripTimeField;
            }
            set {
                this.tripTimeField = value;
            }
        }
        
        /// <remarks/>
        public long DrivingTime {
            get {
                return this.drivingTimeField;
            }
            set {
                this.drivingTimeField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Direction {
        
        private LatLong latLongField;
        
        private DirectionType directionTypeField;
        
        private DirectionAction actionField;
        
        private float bearingOutOfTurnField;
        
        private float bearingIntoTurnField;
        
        private long durationField;
        
        private double distanceField;
        
        private string towardsField;
        
        private string instructionField;
        
        private string formattedInstructionField;
        
        private int idField;
        
        private MapViewRepresentations viewField;
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
        
        /// <remarks/>
        public DirectionType DirectionType {
            get {
                return this.directionTypeField;
            }
            set {
                this.directionTypeField = value;
            }
        }
        
        /// <remarks/>
        public DirectionAction Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public float BearingOutOfTurn {
            get {
                return this.bearingOutOfTurnField;
            }
            set {
                this.bearingOutOfTurnField = value;
            }
        }
        
        /// <remarks/>
        public float BearingIntoTurn {
            get {
                return this.bearingIntoTurnField;
            }
            set {
                this.bearingIntoTurnField = value;
            }
        }
        
        /// <remarks/>
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string Towards {
            get {
                return this.towardsField;
            }
            set {
                this.towardsField = value;
            }
        }
        
        /// <remarks/>
        public string Instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
            }
        }
        
        /// <remarks/>
        public string FormattedInstruction {
            get {
                return this.formattedInstructionField;
            }
            set {
                this.formattedInstructionField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DirectionType {
        
        /// <remarks/>
        Driving,
        
        /// <remarks/>
        Border,
        
        /// <remarks/>
        StartOfDay,
        
        /// <remarks/>
        EndOfDay,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Waypoint,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DirectionAction {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Depart,
        
        /// <remarks/>
        Arrive,
        
        /// <remarks/>
        TurnLeft,
        
        /// <remarks/>
        TurnRight,
        
        /// <remarks/>
        BearLeft,
        
        /// <remarks/>
        BearRight,
        
        /// <remarks/>
        Merge,
        
        /// <remarks/>
        Continue,
        
        /// <remarks/>
        TurnBack,
        
        /// <remarks/>
        TakeRoundabout,
        
        /// <remarks/>
        ConstructionDelay,
        
        /// <remarks/>
        ConstructionStop,
        
        /// <remarks/>
        NameChange,
        
        /// <remarks/>
        LeftLeft,
        
        /// <remarks/>
        LeftRight,
        
        /// <remarks/>
        RightLeft,
        
        /// <remarks/>
        RightRight,
        
        /// <remarks/>
        TakeRamp,
        
        /// <remarks/>
        TakeRampLeft,
        
        /// <remarks/>
        TakeRampRight,
        
        /// <remarks/>
        KeepStraight,
        
        /// <remarks/>
        KeepLeft,
        
        /// <remarks/>
        KeepRight,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CalculatedRouteRepresentation {
        
        private byte[] bitsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Bits {
            get {
                return this.bitsField;
            }
            set {
                this.bitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class PixelRectangle {
        
        private int bottomField;
        
        private int leftField;
        
        private int rightField;
        
        private int topField;
        
        /// <remarks/>
        public int Bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
            }
        }
        
        /// <remarks/>
        public int Left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
            }
        }
        
        /// <remarks/>
        public int Right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
            }
        }
        
        /// <remarks/>
        public int Top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class HotArea {
        
        private PixelRectangle iconRectangleField;
        
        private PixelRectangle labelRectangleField;
        
        private string pinIDField;
        
        /// <remarks/>
        public PixelRectangle IconRectangle {
            get {
                return this.iconRectangleField;
            }
            set {
                this.iconRectangleField = value;
            }
        }
        
        /// <remarks/>
        public PixelRectangle LabelRectangle {
            get {
                return this.labelRectangleField;
            }
            set {
                this.labelRectangleField = value;
            }
        }
        
        /// <remarks/>
        public string PinID {
            get {
                return this.pinIDField;
            }
            set {
                this.pinIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapImage {
        
        private HotArea[] hotAreasField;
        
        private MimeData mimeDataField;
        
        private MapViewRepresentations viewField;
        
        private string urlField;
        
        /// <remarks/>
        public HotArea[] HotAreas {
            get {
                return this.hotAreasField;
            }
            set {
                this.hotAreasField = value;
            }
        }
        
        /// <remarks/>
        public MimeData MimeData {
            get {
                return this.mimeDataField;
            }
            set {
                this.mimeDataField = value;
            }
        }
        
        /// <remarks/>
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class PixelCoord {
        
        private int xField;
        
        private int yField;
        
        /// <remarks/>
        public int X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public int Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Pushpin {
        
        private string iconDataSourceField;
        
        private string iconNameField;
        
        private string labelField;
        
        private LatLong latLongField;
        
        private string pinIDField;
        
        private PixelCoord pixelField;
        
        private bool returnsHotAreaField;
        
        private bool labelNearbyRoadsField;
        
        /// <remarks/>
        public string IconDataSource {
            get {
                return this.iconDataSourceField;
            }
            set {
                this.iconDataSourceField = value;
            }
        }
        
        /// <remarks/>
        public string IconName {
            get {
                return this.iconNameField;
            }
            set {
                this.iconNameField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
        
        /// <remarks/>
        public string PinID {
            get {
                return this.pinIDField;
            }
            set {
                this.pinIDField = value;
            }
        }
        
        /// <remarks/>
        public PixelCoord Pixel {
            get {
                return this.pixelField;
            }
            set {
                this.pixelField = value;
            }
        }
        
        /// <remarks/>
        public bool ReturnsHotArea {
            get {
                return this.returnsHotAreaField;
            }
            set {
                this.returnsHotAreaField = value;
            }
        }
        
        /// <remarks/>
        public bool LabelNearbyRoads {
            get {
                return this.labelNearbyRoadsField;
            }
            set {
                this.labelNearbyRoadsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapOptions {
        
        private RouteHighlightColor routeHighlightColorField;
        
        private RouteHighlightColor constructionDelayHighlightColorField;
        
        private RouteHighlightColor constructionClosureHighlightColorField;
        
        private MapFontSize fontSizeField;
        
        private ImageFormat formatField;
        
        private bool isOverviewMapField;
        
        private MapReturnType returnTypeField;
        
        private double panHorizontalField;
        
        private double panVerticalField;
        
        private MapStyle styleField;
        
        private double zoomField;
        
        private bool preventIconCollisionsField;
        
        public MapOptions() {
            this.fontSizeField = MapFontSize.Smaller;
            this.isOverviewMapField = false;
            this.returnTypeField = MapReturnType.ReturnImage;
            this.zoomField = 1;
            this.preventIconCollisionsField = false;
        }
        
        /// <remarks/>
        public RouteHighlightColor RouteHighlightColor {
            get {
                return this.routeHighlightColorField;
            }
            set {
                this.routeHighlightColorField = value;
            }
        }
        
        /// <remarks/>
        public RouteHighlightColor ConstructionDelayHighlightColor {
            get {
                return this.constructionDelayHighlightColorField;
            }
            set {
                this.constructionDelayHighlightColorField = value;
            }
        }
        
        /// <remarks/>
        public RouteHighlightColor ConstructionClosureHighlightColor {
            get {
                return this.constructionClosureHighlightColorField;
            }
            set {
                this.constructionClosureHighlightColorField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(MapFontSize.Smaller)]
        public MapFontSize FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        public ImageFormat Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsOverviewMap {
            get {
                return this.isOverviewMapField;
            }
            set {
                this.isOverviewMapField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(MapReturnType.ReturnImage)]
        public MapReturnType ReturnType {
            get {
                return this.returnTypeField;
            }
            set {
                this.returnTypeField = value;
            }
        }
        
        /// <remarks/>
        public double PanHorizontal {
            get {
                return this.panHorizontalField;
            }
            set {
                this.panHorizontalField = value;
            }
        }
        
        /// <remarks/>
        public double PanVertical {
            get {
                return this.panVerticalField;
            }
            set {
                this.panVerticalField = value;
            }
        }
        
        /// <remarks/>
        public MapStyle Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(1)]
        public double Zoom {
            get {
                return this.zoomField;
            }
            set {
                this.zoomField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PreventIconCollisions {
            get {
                return this.preventIconCollisionsField;
            }
            set {
                this.preventIconCollisionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum RouteHighlightColor {
        
        /// <remarks/>
        DefaultColor,
        
        /// <remarks/>
        Green,
        
        /// <remarks/>
        Yellow,
        
        /// <remarks/>
        Cyan,
        
        /// <remarks/>
        Red,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum MapStyle {
        
        /// <remarks/>
        DefaultStyle,
        
        /// <remarks/>
        Locator,
        
        /// <remarks/>
        Terrain,
        
        /// <remarks/>
        Road,
        
        /// <remarks/>
        Political,
        
        /// <remarks/>
        Small,
        
        /// <remarks/>
        LocatorBW,
        
        /// <remarks/>
        TerrainBW,
        
        /// <remarks/>
        RoadBW,
        
        /// <remarks/>
        PoliticalBW,
        
        /// <remarks/>
        SmallBW,
        
        /// <remarks/>
        Comprehensive,
        
        /// <remarks/>
        PhysicalFeatures,
        
        /// <remarks/>
        Tectonic,
        
        /// <remarks/>
        EarthByDay,
        
        /// <remarks/>
        EarthByNight,
        
        /// <remarks/>
        Ecoregions,
        
        /// <remarks/>
        Climate,
        
        /// <remarks/>
        TemperatureJanuary,
        
        /// <remarks/>
        TemperatureJuly,
        
        /// <remarks/>
        PrecipitationJanuary,
        
        /// <remarks/>
        PrecipitationJuly,
        
        /// <remarks/>
        PrecipitationAnnual,
        
        /// <remarks/>
        Languages,
        
        /// <remarks/>
        Religions,
        
        /// <remarks/>
        PopulationDensity,
        
        /// <remarks/>
        Parks,
        
        /// <remarks/>
        TimeZones,
        
        /// <remarks/>
        Outline,
        
        /// <remarks/>
        Phone,
        
        /// <remarks/>
        PhoneBW,
        
        /// <remarks/>
        Night,
        
        /// <remarks/>
        Europe,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ElementColor {
        
        private byte aField;
        
        private byte rField;
        
        private byte gField;
        
        private byte bField;
        
        /// <remarks/>
        public byte A {
            get {
                return this.aField;
            }
            set {
                this.aField = value;
            }
        }
        
        /// <remarks/>
        public byte R {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public byte G {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public byte B {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Polygon {
        
        private string dataSourceNameField;
        
        private int entityIDField;
        
        private ElementColor borderColorField;
        
        private ElementColor fillColorField;
        
        private string labelField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public ElementColor BorderColor {
            get {
                return this.borderColorField;
            }
            set {
                this.borderColorField = value;
            }
        }
        
        /// <remarks/>
        public ElementColor FillColor {
            get {
                return this.fillColorField;
            }
            set {
                this.fillColorField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapSpecification {
        
        private Polygon[] polygonsField;
        
        private string dataSourceNameField;
        
        private int[] highlightedEntityIDsField;
        
        private string[] hideEntityTypesField;
        
        private MapOptions optionsField;
        
        private Pushpin[] pushpinsField;
        
        private Route routeField;
        
        private MapView[] viewsField;
        
        /// <remarks/>
        public Polygon[] Polygons {
            get {
                return this.polygonsField;
            }
            set {
                this.polygonsField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public int[] HighlightedEntityIDs {
            get {
                return this.highlightedEntityIDsField;
            }
            set {
                this.highlightedEntityIDsField = value;
            }
        }
        
        /// <remarks/>
        public string[] HideEntityTypes {
            get {
                return this.hideEntityTypesField;
            }
            set {
                this.hideEntityTypesField = value;
            }
        }
        
        /// <remarks/>
        public MapOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public Pushpin[] Pushpins {
            get {
                return this.pushpinsField;
            }
            set {
                this.pushpinsField = value;
            }
        }
        
        /// <remarks/>
        public Route Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public MapView[] Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindPolygonSpecification {
        
        private string dataSourceNameField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        private SpatialFilter spatialFilterField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public SpatialFilter SpatialFilter {
            get {
                return this.spatialFilterField;
            }
            set {
                this.spatialFilterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindFilter {
        
        private string entityTypeNameField;
        
        private string[] propertyNamesField;
        
        private WhereClause whereClauseField;
        
        private SortProperty[] sortPropertiesField;
        
        private FilterExpression expressionField;
        
        /// <remarks/>
        public string EntityTypeName {
            get {
                return this.entityTypeNameField;
            }
            set {
                this.entityTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] PropertyNames {
            get {
                return this.propertyNamesField;
            }
            set {
                this.propertyNamesField = value;
            }
        }
        
        /// <remarks/>
        public WhereClause WhereClause {
            get {
                return this.whereClauseField;
            }
            set {
                this.whereClauseField = value;
            }
        }
        
        /// <remarks/>
        public SortProperty[] SortProperties {
            get {
                return this.sortPropertiesField;
            }
            set {
                this.sortPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public FilterExpression Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class WhereClause {
        
        private EntityPropertyValue[] searchPropertiesField;
        
        private SearchOperatorFlag searchOperatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityPropertyValue[] SearchProperties {
            get {
                return this.searchPropertiesField;
            }
            set {
                this.searchPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public SearchOperatorFlag SearchOperator {
            get {
                return this.searchOperatorField;
            }
            set {
                this.searchOperatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SearchOperatorFlag {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class SortProperty {
        
        private string propertyNameField;
        
        private SortDirection directionField;
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        public SortDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SortDirection {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FilterExpression {
        
        private string textField;
        
        private object[] parametersField;
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public object[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindOptions {
        
        private FindRange rangeField;
        
        private int searchContextField;
        
        private FindResultMask resultMaskField;
        
        private double thresholdScoreField;
        
        public FindOptions() {
            this.thresholdScoreField = 0.85;
        }
        
        /// <remarks/>
        public FindRange Range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public int SearchContext {
            get {
                return this.searchContextField;
            }
            set {
                this.searchContextField = value;
            }
        }
        
        /// <remarks/>
        public FindResultMask ResultMask {
            get {
                return this.resultMaskField;
            }
            set {
                this.resultMaskField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.85)]
        public double ThresholdScore {
            get {
                return this.thresholdScoreField;
            }
            set {
                this.thresholdScoreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindRange {
        
        private int startIndexField;
        
        private int countField;
        
        public FindRange() {
            this.startIndexField = 0;
            this.countField = 25;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(25)]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum FindResultMask {
        
        /// <remarks/>
        LatLongFlag = 1,
        
        /// <remarks/>
        EntityFlag = 2,
        
        /// <remarks/>
        AddressFlag = 4,
        
        /// <remarks/>
        BestMapViewFlag = 8,
        
        /// <remarks/>
        MatchDetailsFlag = 16,
        
        /// <remarks/>
        RooftopFlag = 32,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LatLongRectangleSpatialFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LatLongSpatialFilter))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public abstract partial class SpatialFilter {
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLongRectangleSpatialFilter : SpatialFilter {
        
        private LatLongRectangle boundingRectangleField;
        
        private SpatialRelation polygonRectangleRelationField;
        
        /// <remarks/>
        public LatLongRectangle BoundingRectangle {
            get {
                return this.boundingRectangleField;
            }
            set {
                this.boundingRectangleField = value;
            }
        }
        
        /// <remarks/>
        public SpatialRelation PolygonRectangleRelation {
            get {
                return this.polygonRectangleRelationField;
            }
            set {
                this.polygonRectangleRelationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SpatialRelation {
        
        /// <remarks/>
        WithinArea,
        
        /// <remarks/>
        TouchesArea,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLongSpatialFilter : SpatialFilter {
        
        private LatLong latLongField;
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindNearRouteSpecification {
        
        private string dataSourceNameField;
        
        private double distanceField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        private Route routeField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public Route Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindByIDSpecification {
        
        private string dataSourceNameField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        private int[] entityIDsField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public int[] EntityIDs {
            get {
                return this.entityIDsField;
            }
            set {
                this.entityIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindByPropertySpecification {
        
        private string dataSourceNameField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindNearbySpecification {
        
        private string dataSourceNameField;
        
        private LatLong latLongField;
        
        private double distanceField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
        
        /// <remarks/>
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class GetInfoOptions {
        
        private bool includeAddressesField;
        
        private bool includeAllEntityTypesField;
        
        private string[] entityTypesToReturnField;
        
        public GetInfoOptions() {
            this.includeAddressesField = true;
            this.includeAllEntityTypesField = true;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeAddresses {
            get {
                return this.includeAddressesField;
            }
            set {
                this.includeAddressesField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeAllEntityTypes {
            get {
                return this.includeAllEntityTypesField;
            }
            set {
                this.includeAllEntityTypesField = value;
            }
        }
        
        /// <remarks/>
        public string[] EntityTypesToReturn {
            get {
                return this.entityTypesToReturnField;
            }
            set {
                this.entityTypesToReturnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindAddressSpecification {
        
        private string dataSourceNameField;
        
        private Address inputAddressField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public Address InputAddress {
            get {
                return this.inputAddressField;
            }
            set {
                this.inputAddressField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapPointConstants {
        
        private double earthRadiusInKilometersField;
        
        private double piField;
        
        private double radiansPerDegreeField;
        
        private double degreesPerRadianField;
        
        private double milesPerKilometerField;
        
        private double kilometersPerMileField;
        
        private double kilometersPerFootField;
        
        private double feetPerKilometerField;
        
        private double findScoreThresholdField;
        
        private int assumedDpiField;
        
        private double feetPerMeterField;
        
        private double metersPerFootField;
        
        public MapPointConstants() {
            this.earthRadiusInKilometersField = 6378.2;
            this.piField = 3.1415926535897931;
            this.radiansPerDegreeField = 0.017453292519943295;
            this.degreesPerRadianField = 57.295779513082323;
            this.milesPerKilometerField = 0.621371192237334;
            this.kilometersPerMileField = 1.609344;
            this.kilometersPerFootField = 0.0003048;
            this.feetPerKilometerField = 3280.8398950131232;
            this.findScoreThresholdField = 0.85;
            this.assumedDpiField = 96;
            this.feetPerMeterField = 3.280839895013123;
            this.metersPerFootField = 0.3048;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(6378.2)]
        public double EarthRadiusInKilometers {
            get {
                return this.earthRadiusInKilometersField;
            }
            set {
                this.earthRadiusInKilometersField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(3.1415926535897931)]
        public double Pi {
            get {
                return this.piField;
            }
            set {
                this.piField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.017453292519943295)]
        public double RadiansPerDegree {
            get {
                return this.radiansPerDegreeField;
            }
            set {
                this.radiansPerDegreeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(57.295779513082323)]
        public double DegreesPerRadian {
            get {
                return this.degreesPerRadianField;
            }
            set {
                this.degreesPerRadianField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.621371192237334)]
        public double MilesPerKilometer {
            get {
                return this.milesPerKilometerField;
            }
            set {
                this.milesPerKilometerField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(1.609344)]
        public double KilometersPerMile {
            get {
                return this.kilometersPerMileField;
            }
            set {
                this.kilometersPerMileField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.0003048)]
        public double KilometersPerFoot {
            get {
                return this.kilometersPerFootField;
            }
            set {
                this.kilometersPerFootField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(3280.8398950131232)]
        public double FeetPerKilometer {
            get {
                return this.feetPerKilometerField;
            }
            set {
                this.feetPerKilometerField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.85)]
        public double FindScoreThreshold {
            get {
                return this.findScoreThresholdField;
            }
            set {
                this.findScoreThresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(96)]
        public int AssumedDpi {
            get {
                return this.assumedDpiField;
            }
            set {
                this.assumedDpiField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(3.280839895013123)]
        public double FeetPerMeter {
            get {
                return this.feetPerMeterField;
            }
            set {
                this.feetPerMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0.3048)]
        public double MetersPerFoot {
            get {
                return this.metersPerFootField;
            }
            set {
                this.metersPerFootField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindResult {
        
        private double scoreField;
        
        private Location foundLocationField;
        
        private Location bestViewableLocationField;
        
        /// <remarks/>
        public double Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public Location FoundLocation {
            get {
                return this.foundLocationField;
            }
            set {
                this.foundLocationField = value;
            }
        }
        
        /// <remarks/>
        public Location BestViewableLocation {
            get {
                return this.bestViewableLocationField;
            }
            set {
                this.bestViewableLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindResults {
        
        private int numberFoundField;
        
        private int startIndexField;
        
        private FindResult[] resultsField;
        
        private double topScoreField;
        
        /// <remarks/>
        public int NumberFound {
            get {
                return this.numberFoundField;
            }
            set {
                this.numberFoundField = value;
            }
        }
        
        /// <remarks/>
        public int StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        public FindResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
        
        /// <remarks/>
        public double TopScore {
            get {
                return this.topScoreField;
            }
            set {
                this.topScoreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindSpecification {
        
        private string dataSourceNameField;
        
        private string inputPlaceField;
        
        private string[] entityTypeNamesField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public string InputPlace {
            get {
                return this.inputPlaceField;
            }
            set {
                this.inputPlaceField = value;
            }
        }
        
        /// <remarks/>
        public string[] EntityTypeNames {
            get {
                return this.entityTypeNamesField;
            }
            set {
                this.entityTypeNamesField = value;
            }
        }
        
        /// <remarks/>
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class TokenSpecification {
        
        private string clientIPAddressField;
        
        private int tokenValidityDurationMinutesField;
        
        /// <remarks/>
        public string ClientIPAddress {
            get {
                return this.clientIPAddressField;
            }
            set {
                this.clientIPAddressField = value;
            }
        }
        
        /// <remarks/>
        public int TokenValidityDurationMinutes {
            get {
                return this.tokenValidityDurationMinutesField;
            }
            set {
                this.tokenValidityDurationMinutesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class DataSource {
        
        private string nameField;
        
        private string versionField;
        
        private string descriptionField;
        
        private DataSourceCapability capabilityField;
        
        private int[] entityExtentField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public DataSourceCapability Capability {
            get {
                return this.capabilityField;
            }
            set {
                this.capabilityField = value;
            }
        }
        
        /// <remarks/>
        public int[] EntityExtent {
            get {
                return this.entityExtentField;
            }
            set {
                this.entityExtentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DataSourceCapability {
        
        /// <remarks/>
        CanDrawMaps = 1,
        
        /// <remarks/>
        CanFindPlaces = 2,
        
        /// <remarks/>
        CanFindNearby = 4,
        
        /// <remarks/>
        CanRoute = 8,
        
        /// <remarks/>
        CanFindAddress = 16,
        
        /// <remarks/>
        HasIcons = 32,
        
        /// <remarks/>
        DataServiceQuery = 64,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityProperty {
        
        private string nameField;
        
        private string displayNameField;
        
        private string dataTypeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityType {
        
        private string nameField;
        
        private string displayNameField;
        
        private string parentNameField;
        
        private string definitionField;
        
        private EntityProperty[] propertiesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
            }
        }
        
        /// <remarks/>
        public string Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionInfo {
        
        private int entityIDField;
        
        private LatLong latLongField;
        
        private string iso2Field;
        
        private string iso3Field;
        
        private string friendlyNameField;
        
        private string officialNameField;
        
        /// <remarks/>
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
        
        /// <remarks/>
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
            }
        }
        
        /// <remarks/>
        public string Iso3 {
            get {
                return this.iso3Field;
            }
            set {
                this.iso3Field = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        public string OfficialName {
            get {
                return this.officialNameField;
            }
            set {
                this.officialNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class VersionInfo {
        
        private string componentField;
        
        private string versionField;
        
        /// <remarks/>
        public string Component {
            get {
                return this.componentField;
            }
            set {
                this.componentField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionContext {
        
        private int entityIDField;
        
        private string iso2Field;
        
        public CountryRegionContext() {
            this.entityIDField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DistanceUnit {
        
        /// <remarks/>
        Kilometer,
        
        /// <remarks/>
        Mile,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class UserInfoRenderHeader : UserInfoHeader {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerInfoRenderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerInfoRouteHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerInfoFindHeader))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class CustomerInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        private short customLogEntryField;
        
        /// <remarks/>
        public short CustomLogEntry {
            get {
                return this.customLogEntryField;
            }
            set {
                this.customLogEntryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class CustomerInfoRouteHeader : CustomerInfoHeader {
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class UserInfoFindHeader : UserInfoHeader {
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class CustomerInfoRenderHeader : CustomerInfoHeader {
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class CustomerInfoFindHeader : CustomerInfoHeader {
    }
}
